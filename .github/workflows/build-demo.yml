name: CI/CD

on:
  push:
    tags: ['*']

jobs:
  linter:
    name: Lint python code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Python Linter
        uses: sunnysid3up/python-linter@master
        with:
          source: "./docker/app/"
          mypy-options: "--ignore-missing-imports --show-error-codes"
          pylint-options: "--rcfile=./docker/app/setup.cfg"
          isort-options: "-w 100"
          django: false
          strict: "low"
  hadolint:
    name: Hadolint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: ./docker/Dockerfile
  push_to_registries:
    needs: [linter, hadolint]
    name: Push Docker image to single registry
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: harbor.kakor.ovh
          username: ipi
          password: ${{ secrets.password_harbor }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: harbor.kakor.ovh/ipi/groupe-4
          tags: ${{ github.ref_name }}

      - name: Build and push Docker images
        id: push
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: ./docker/
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  # compile:
  #   needs: push_to_registries
  #   name: Compile site assets
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Check out the repo
  #       uses: actions/checkout@v4
  #     - name: Log in to the Container registry
  #       uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
  #       with:
  #         registry: harbor.kakor.ovh
  #         username: ipi
  #         password: ${{ secrets.password_harbor }}
  #     - name: Extract metadata (tags, labels) for Docker
  #       id: meta
  #       uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
  #       with:
  #         images: harbor.kakor.ovh/ipi/groupe-4
  #         tags: type=sha
      # - uses: addnab/docker-run-action@v3
      #   with:
      #     username: ipi
      #     password: ${{ secrets.password_harbor }}
      #     registry: harbor.kakor.ovh
      #     image: ${{ steps.meta.outputs.tags }}

      # - name: Test api
      #   run: |
      #     sleep 10 && curl --header "Content-Type: application/json" http://localhost:5000/test


      # Exercice 4
      # - name: Run Docker container
      #   run: docker run -d -p 5000:5000 --name groupe4 ${{ steps.meta.outputs.tags }}
      # - name: Test Api
      #   run: |
      #     sleep 10
      #     curl http://127.0.0.1:5000/test
      #     curl --header "Content-Type: application/json" http://localhost:5000/librairie/livres -d '{"titre": "DevSecOps DEAVSETS", "auteur": "Jordan Assouline"}'

  # sonarqube:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v4
  #     with:
  #       fetch-depth: 0
  #   - name: SonarQube Scan
  #     uses: SonarSource/sonarqube-scan-action@<ce/actions/official-sonarqube-scan
  #     env:
  #       SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  #       SONAR_HOST_URL: https://sonarqube.apps.openshift.kakor.ovh

  Helm:
    name: lancement Helm
    runs-on: ubuntu-latest
    steps:
      - name: Run Docker container
        run: docker run -d -p 5000:5000 --name 
      - name: Connexion Ã  Openshift
        run: oc login --token=sha256~PjEzP_iqaBRuaKXLtKGUJBTLN0GpnzV5mEUparnJ_nM --server=https://api.openshift.kakor.ovh:6443
      - name: Deployment Helm
        run: helm upgrade --install groupe-4 librairie-helm/ --set image=harbor.kakor.ovh/ipi/groupe-4:${{ github.ref_name }}